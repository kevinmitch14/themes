.rt-DataListRoot {
  display: grid;
  grid-template-columns: auto 1fr;
}

.rt-DataListItem {
  position: relative;
  box-sizing: border-box;
  grid-column: span 2;
}

.rt-DataListLabel {
  color: var(--gray-a11);
  box-sizing: border-box;
  display: block;
  white-space: nowrap;
}

.rt-DataListData {
  box-sizing: border-box;
  margin: 0;
  display: block;
}

/***************************************************************************************************
 *                                                                                                 *
 * ALIGN                                                                                           *
 *                                                                                                 *
 ***************************************************************************************************/

@breakpoints {
  .rt-DataListItem {
    &:where(.rt-r-dl-vaf-start) {
      align-items: start;
    }
    &:where(.rt-r-dl-vaf-center) {
      align-items: center;
    }
    &:where(.rt-r-dl-vaf-end) {
      align-items: end;
    }
    &:where(.rt-r-dl-vaf-baseline) {
      align-items: baseline;
    }
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * ORIENTATION                                                                                     *
 *                                                                                                 *
 ***************************************************************************************************/

@breakpoints {
  .rt-DataListRoot {
    &:where(.rt-r-dl-orient-vertical) :where(.rt-DataListItem) {
      display: flex;
      flex-direction: column;
      gap: var(--space-1);
    }
    &:where(.rt-r-dl-orient-horizontal) :where(.rt-DataListItem) {
      display: grid;
      /* Use subgrid so all the label columns remain aligned */
      grid-template-columns: subgrid;
      padding: 0;
      gap: inherit;
    }
    &:where(.rt-r-dl-orient-vertical) :where(.rt-DataListLabel) {
      white-space: normal;
      padding: 0;
      width: auto;
    }
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * TRIM                                                                                            *
 *                                                                                                 *
 ***************************************************************************************************/

@breakpoints {
  .rt-DataListRoot {
    &:where(.rt-r-dl-trim-start, .rt-r-dl-trim-both) :where(.rt-DataListItem:first-child) {
      margin-top: calc(
        var(--default-leading-trim-start) -
          var(--line-height, calc(1em * var(--default-line-height))) / 2
      );
    }

    &:where(.rt-r-dl-trim-end, .rt-r-dl-trim-both) :where(.rt-DataListItem:last-child) {
      margin-bottom: calc(
        var(--default-leading-trim-end) - var(--line-height, calc(1em * var(--default-line-height))) /
          2
      );
    }
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * WIDTH                                                                                           *
 *                                                                                                 *
 ***************************************************************************************************/

@breakpoints {
  .rt-DataListLabel {
    &:where(.rt-r-dl-width) {
      /* Keep this selector here to maintain the source order */
    }
    &:where(.rt-r-dl-width-1) {
      width: calc(var(--space-1) * var(--dl-width-scale));
    }
    &:where(.rt-r-dl-width-2) {
      width: calc(var(--space-2) * var(--dl-width-scale));
    }
    &:where(.rt-r-dl-width-3) {
      width: calc(var(--space-3) * var(--dl-width-scale));
    }

    &:where(.rt-r-dl-min-width) {
      /* Keep this selector here to maintain the source order */
    }
    &:where(.rt-r-dl-min-width-1) {
      min-width: calc(var(--space-1) * var(--dl-width-scale));
    }
    &:where(.rt-r-dl-min-width-2) {
      min-width: calc(var(--space-2) * var(--dl-width-scale));
    }
    &:where(.rt-r-dl-min-width-3) {
      min-width: calc(var(--space-3) * var(--dl-width-scale));
    }

    &:where(.rt-r-dl-max-width) {
      /* Keep this selector here to maintain the source order */
    }
    &:where(.rt-r-dl-max-width-1) {
      max-width: calc(var(--space-1) * var(--dl-width-scale));
    }
    &:where(.rt-r-dl-max-width-2) {
      max-width: calc(var(--space-2) * var(--dl-width-scale));
    }
    &:where(.rt-r-dl-max-width-3) {
      max-width: calc(var(--space-3) * var(--dl-width-scale));
    }
  }
}

/* When using custom properties, responsive classes aren't added so these are defined again*/
.rt-DataListLabel {
  --dl-width-scale: 24;

  &:where(.rt-r-dl-width) {
    width: var(--dl-label-width);
  }
  &:where(.rt-r-dl-width-1) {
    width: calc(var(--space-1) * var(--dl-width-scale));
  }
  &:where(.rt-r-dl-width-2) {
    width: calc(var(--space-2) * var(--dl-width-scale));
  }
  &:where(.rt-r-dl-width-3) {
    width: calc(var(--space-3) * var(--dl-width-scale));
  }

  &:where(.rt-r-dl-min-width) {
    min-width: var(--dl-label-min-width);
  }
  &:where(.rt-r-dl-min-width-1) {
    min-width: calc(var(--space-1) * var(--dl-width-scale));
  }
  &:where(.rt-r-dl-min-width-2) {
    min-width: calc(var(--space-2) * var(--dl-width-scale));
  }
  &:where(.rt-r-dl-min-width-3) {
    min-width: calc(var(--space-3) * var(--dl-width-scale));
  }

  &:where(.rt-r-dl-max-width) {
    max-width: var(--dl-label-max-width);
  }
  &:where(.rt-r-dl-max-width-1) {
    max-width: calc(var(--space-1) * var(--dl-width-scale));
  }
  &:where(.rt-r-dl-max-width-2) {
    max-width: calc(var(--space-2) * var(--dl-width-scale));
  }
  &:where(.rt-r-dl-max-width-3) {
    max-width: calc(var(--space-3) * var(--dl-width-scale));
  }
}

@media (--xs) {
  .xs\:rt-r-dl-width {
    width: var(--dl-label-width-xs);
  }
  .xs\:rt-r-dl-min-width {
    min-width: var(--dl-label-min-width-xs);
  }
  .xs\:rt-r-dl-max-width {
    max-width: var(--dl-label-max-width-xs);
  }
}
@media (--sm) {
  .sm\:rt-r-dl-width {
    width: var(--dl-label-width-sm);
  }
  .sm\:rt-r-dl-min-width {
    min-width: var(--dl-label-min-width-sm);
  }
  .sm\:rt-r-dl-max-width {
    max-width: var(--dl-label-max-width-sm);
  }
}
@media (--md) {
  .md\:rt-r-dl-width {
    width: var(--dl-label-width-md);
  }
  .md\:rt-r-dl-min-width {
    min-width: var(--dl-label-min-width-md);
  }
  .md\:rt-r-dl-max-width {
    max-width: var(--dl-label-max-width-md);
  }
}
@media (--lg) {
  .lg\:rt-r-dl-width {
    width: var(--dl-label-width-lg);
  }
  .lg\:rt-r-dl-min-width {
    min-width: var(--dl-label-min-width-lg);
  }
  .lg\:rt-r-dl-max-width {
    max-width: var(--dl-label-max-width-lg);
  }
}
@media (--xl) {
  .xl\:rt-r-dl-width {
    width: var(--dl-label-width-xl);
  }
  .xl\:rt-r-dl-min-width {
    min-width: var(--dl-label-min-width-xl);
  }
  .xl\:rt-r-dl-max-width {
    max-width: var(--dl-label-max-width-xl);
  }
}
