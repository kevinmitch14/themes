.rt-DataListRoot {
  margin: 0;
  display: grid;
  /** Value  set via props in component **/
  grid-template-columns: var(--data-list-columns, minmax(200px, max-content) 1fr);
}

.rt-DataListItem {
  position: relative;
  box-sizing: border-box;
  grid-column: span 2;
}

@breakpoints {
  .rt-r-o-vertical .rt-DataListItem {
    display: flex;
    flex-direction: column;
    gap: var(--space-1);
  }
  .rt-r-o-horizontal .rt-DataListItem {
    display: grid;
    /** Use subgrid so all the label columns remain aligned **/
    grid-template-columns: subgrid;
    padding: 0;
    gap: inherit;
  }

  .rt-DataListItem.rt-r-vaf-start {
    align-items: start;
  }

  .rt-DataListItem.rt-r-vaf-center {
    align-items: center;
  }

  .rt-DataListItem.rt-r-vaf-end {
    align-items: end;
  }

  .rt-DataListItem.rt-r-vaf-baseline {
    align-items: baseline;
  }
}

.rt-DataListLabel {
  color: var(--gray-a11);
  box-sizing: border-box;
  display: block;
}

@breakpoints {
  .rt-r-o-vertical .rt-DataListLabel {
    white-space: normal;
    padding: 0;
    width: auto;
  }
  .rt-r-o-horizontal .rt-DataListLabel {
    white-space: nowrap;
  }
}

.rt-DataListData {
  box-sizing: border-box;
  margin: 0;
  display: block;
}

@breakpoints {
  .rt-r-o-vertical .rt-DataListData {
    padding: 0;
  }
}

.rt-DataListDataInner {
  display: flex;
}

/*
   * Improve alignment when nesting flex elements with Text. Prepending contents with a text character
   * enforces default baseline alignment when child elements contain text within. The character used is
   * a zero-width joiner, which is invisible, and pseudo-elements aren't copyable.
   */
.rt-DataListDataInner::before {
  content: '\200D';
}

.rt-DataListDataInnerContents {
  display: block;
}
